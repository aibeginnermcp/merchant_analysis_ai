apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: merchant-analytics
  labels:
    app: merchant-analytics
    component: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: merchant-analytics
      component: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: merchant-analytics
        component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: ${DOCKER_REGISTRY}/merchant-analytics-api-gateway:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATA_SIMULATOR_URL
          value: "http://data-simulator:8000"
        - name: CASHFLOW_PREDICTOR_URL
          value: "http://cashflow-predictor:8002"
        - name: COST_ANALYZER_URL
          value: "http://cost-analyzer:8001"
        - name: COMPLIANCE_CHECKER_URL
          value: "http://compliance-checker:8003"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: jwt-secret
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: merchant-analytics
  labels:
    app: merchant-analytics
    component: api-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: merchant-analytics
    component: api-gateway
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  namespace: merchant-analytics
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - api.merchant-analytics.example.com
    secretName: merchant-analytics-tls
  rules:
  - host: api.merchant-analytics.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80 
 