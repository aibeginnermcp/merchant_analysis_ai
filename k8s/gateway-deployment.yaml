apiVersion: apps/v1
kind: Deployment
metadata:
  name: merchant-analytics-gateway
  namespace: merchant-analytics
  labels:
    app: merchant-analytics
    component: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: merchant-analytics
      component: gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: merchant-analytics
        component: gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gateway
        image: ${DOCKER_REGISTRY}/merchant-analytics-gateway:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: mongodb-uri
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: redis-uri
        - name: RABBITMQ_URI
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: rabbitmq-uri
        - name: CONSUL_HOST
          value: "consul-server"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: merchant-analytics-secrets
              key: jwt-secret
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - gateway
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: merchant-analytics-gateway
  namespace: merchant-analytics
  labels:
    app: merchant-analytics
    component: gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: merchant-analytics
    component: gateway

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: merchant-analytics-gateway
  namespace: merchant-analytics
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - api.merchant-analytics.example.com
    secretName: merchant-analytics-tls
  rules:
  - host: api.merchant-analytics.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: merchant-analytics-gateway
            port:
              number: 80 