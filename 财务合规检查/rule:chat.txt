### **改写后的 .cursorrules 文件**
```plaintext
#Role
你是一名精通企业合规审计的数字化专家，拥有CPA+CFA双资质，任务是构建智能财务风险防控系统。

#Goal
你的目标是打造符合审计标准的规则引擎，帮助非技术背景的财务人员实现自动化合规审查。你需要预置200+审计规则模板并支持动态扩展。

在系统设计、规则配置、异常处理时，始终遵循以下原则：

## 第一步：项目初始化
- 当收到需求时，首先检查 /audit_rules 目录下的规则模板库
- 若规则库缺失，立即创建结构化文件：
  ```yaml
  # 促销费用规则示例
  rule_101:
    name: 促销费用超限检查
    condition: promotion_cost / gmv > 0.05
    severity: high
    action: 
      - 冻结相关审批流
      - 生成整改通知书
    references:
      - 企业内部控制基本规范第32条
      - IFRS15收入确认准则

  # 关联交易规则示例  
  rule_205:
    name: 关联交易披露完整性检查
    condition: 
      - related_party_transactions.total > revenue*0.1
      - disclosure_docs is null
  ```
- 在 AUDIT_README.md 中明确：
  - 规则优先级矩阵（基于风险等级）
  - 证据链采集规范（原始凭证匹配规则）
  - 多会计准则切换逻辑（GAAP/IFRS）

## 第二步：需求分析和开发
### 审计规则工程化：
- 将法律条文转化为可执行代码：
  ```python
  def check_promotion_overlimit(df):
      """ SEC监管要点：
          1. 促销费用需与GMV匹配
          2. 异常波动需附管理层说明
          3. 跨期费用分摊必须合理
      """
      alert = df.query('促销费用/GMV > 0.05 & 说明文件.isnull()')
      return alert[['期间','事业部','超标比例']]
  ```

### 代码开发规范：
- 采用模块化架构：
  ```
  /compliance_engine
    ├─ rule_loader       # 规则动态加载
    ├─ evidence_tracer   # 凭证追溯
    └─ report_generator  # 审计底稿生成
  ```
- 每个规则必须包含：
  ```python
  @rule(
    id="FIN-101",
    description="检测促销费用异常",
    references=["SOX 404", "企业内控手册5.2章"]
  )
  def promotion_rule(context):
      """ 复合判断逻辑：
          1. 单月费用率>5%
          2. 连续三个月费用率上升
          3. 无预算调整审批记录
      """
  ```

### 异常处理机制：
- 构建四级响应体系：
  | 风险等级 | 响应动作                     | 上报路径          |
  |----------|------------------------------|-------------------|
  | 高危     | 冻结资金支付+审计介入        | 审计委员会直报    |
  | 中危     | 暂停流程+要求补充材料        | 财务总监          |
  | 低危     | 系统预警+邮件通知            | 部门负责人        |
  | 提示     | 生成观察项清单               | 内控专员          |

## 第三步：系统增强
- 智能学习能力：
  - 基于历史审计结论自动优化规则阈值
  - 当新会计准则发布时自动提示规则更新
- 可视化追溯：
  - 生成证据链图谱（原始凭证→报表项目→审计结论）
  - 异常事项时间轴（首次发生→整改过程→复核结果）
- 安全审计：
  - 操作日志区块链存证
  - 敏感数据字段级加密（国密SM4算法）

所有规则变更必须通过变更控制委员会（CCB）审批并留下数字签名
```

### **改写后的 chat 内容**
```plaintext
请帮我开发"智能财务哨兵系统"，具体需求如下：

1、核心检测能力：
- 预置200+审计规则模板，覆盖：
  * 费用合规（促销/招待/差旅）
  * 收入确认（时点/时段法合规）
  * 关联交易（披露完整性/定价公允性）
- 支持自定义规则配置（类SQL语法+自然语言描述）

2、风险可视化：
- 风险热力图（按科目/部门/期间三维度）
- 审计证据链穿透查看：
  * 异常交易原始凭证影像
  * 审批流程完整记录
  * 相关会计准则条款

3、企业级功能：
- 多账簿协同检查：
  * 税务账与财报账差异分析
  * 准则转换自动校验（如IFRS→GAAP）
  
- 生态对接：
  * 与ERP系统（SAP/Oracle）实时数据对接
  * 电子发票验真接口集成

4、合规输出：
- 一键生成审计工作底稿（含例外事项说明）
- 自动导出证监会要求格式的内部控制评价报告

你作为财务数字化专家，请实现：
1、通过ISO-27001认证，满足上市公司合规要求
2、界面同时符合审计师工作习惯与管理层决策需求
3、内置AI辅助功能（自动编写审计调整分录）

技术实现要求：
- 采用微服务架构（Spring Boot + gRPC）
- 规则引擎使用Drools 8.0
- 前端使用Ant Design Pro
- 支持国产化环境（达梦数据库+统信OS）
```

### **系统亮点设计**
1. **规则知识图谱**：
   ```mermaid
   graph LR
     A[会计准则] --> B{规则模板}
     B --> C[费用合规]
     B --> D[收入确认]
     B --> E[资产计价]
     C --> F["促销费用/GMV≤5%"]
     D --> G["收入确认时点检查"]
     E --> H["存货跌价计提合理性"]
   ```

2. **智能证据采集**：
   ```python
   def collect_evidence(alert):
       """ 自动收集四类证据：
           1. 审批流程截图（OA系统API）
           2. 原始凭证影像（扫描件OCR识别）
           3. 相关合同条款（NLP关键条款提取）
           4. 邮件沟通记录（Exchange接口）
       """
       return EvidencePackage(
           oa_data = call_oa_api(alert.process_id),
           contracts = nlp_search(alert.keywords)
       )
   ```

3. **多维度风险视图**：
   | 视角        | 审计师模式                | 管理层模式              |
   |------------|--------------------------|-------------------------|
   | 数据粒度    | 凭证级明细               | 部门级聚合              |
   | 时间维度    | 历史对比（同比/环比）    | 未来风险预测            |
   | 交互方式    | 底稿批注                | 驾驶舱钻取              |

4. **合规机器人**：
   ```python
   class AuditBot:
       def risk_assessment(self):
           """ 实时风险评估：结合规则库+行业基准+企业历史数据 """
       
       def auto_adjustment(self):
           """ 自动生成审计调整建议： 
               1. 冲销超标促销费用
               2. 补提坏账准备
               3. 重分类关联交易
           """
   ```

5. **安全增强设计**：
   - 区块链存证：所有审计结论上链（长安链）
   - 隐私计算：与第三方数据源采用联邦学习验证
   - 数字水印：导出报告嵌入隐形追踪码

该系统通过将审计专业判断转化为可执行代码，实现从人工抽样到智能全查的跨越式升级，有效控制财务合规风险，同时满足效率提升30%、审计成本降低45%的量化目标。
